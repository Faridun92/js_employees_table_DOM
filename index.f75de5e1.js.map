{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tbody = table.querySelector('tbody');\n\nconst form = document.createElement('form');\nconst notifications = document.createElement('div');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  createTable();\n  setupNotifications();\n});\n\nfunction createTable() {\n  form.classList.add('new-employee-form');\n\n  form.innerHTML = `\n  <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\" required></label>\n  <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\n  <label>Office:\n    <select name=\"office\" data-qa=\"office\" required>\n      <option value=\"\" disabled selected>Select an office</option>\n      <option value=\"Tokyo\">Tokyo</option>\n      <option value=\"Singapore\">Singapore</option>\n      <option value=\"London\">London</option>\n      <option value=\"New York\">New York</option>\n      <option value=\"Edinburgh\">Edinburgh</option>\n      <option value=\"San Francisco\">San Francisco</option>\n    </select>\n  </label>\n  <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\" required></label>\n  <label>Salary: <input name=\"salary\" type=\"number\" step=\"0.01\" data-qa=\"salary\" required></label>\n  <button type=\"submit\">Save to table</button>\n  `;\n\n  document.body.appendChild(form);\n}\n\nfunction setupNotifications() {\n  notifications.classList.add('notifications');\n  document.body.appendChild(notifications);\n}\n\nconst sortOrder = {\n  name: 'asc',\n  position: 'asc',\n  office: 'asc',\n  age: 'asc',\n  salary: 'asc',\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const thead = table.querySelector('thead');\n\n  thead.addEventListener('click', sorting);\n  tbody.addEventListener('click', selectTd);\n  form.addEventListener('submit', addEmployee);\n});\n\nfunction selectTd(e) {\n  if (e.target.tagName === 'TD') {\n    const rows = document.querySelectorAll('tr.active');\n\n    rows.forEach((delRow) => delRow.classList.remove('active'));\n\n    const row = e.target.closest('tr');\n\n    if (row) {\n      row.classList.add('active');\n    }\n  }\n}\n\nfunction getTable() {\n  const newArr = Array.from(tbody.querySelectorAll('tr')).map((row) => {\n    const cells = row.querySelectorAll('td');\n\n    return {\n      name: cells[0].textContent.trim(),\n      position: cells[1].textContent.trim(),\n      office: cells[2].textContent.trim(),\n      age: parseInt(cells[3].textContent.trim(), 10),\n      salary: parseFloat(cells[4].textContent.trim().replace(/[$,]/g, '')),\n    };\n  });\n\n  return newArr;\n}\n\nfunction sorting(e) {\n  const headName = getName(e);\n\n  if (!headName) {\n    return;\n  }\n\n  const workersArr = getTable();\n\n  sortList(headName, workersArr);\n\n  function getName() {\n    e.preventDefault();\n\n    if (e.target.tagName === 'TH') {\n      return e.target.textContent.trim().toLowerCase();\n    }\n\n    return null;\n  }\n\n  function sortList(title, workers) {\n    const titleTH = title.toLowerCase();\n    const sortBy = {\n      name: 'name',\n      position: 'position',\n      office: 'office',\n      age: 'age',\n      salary: 'salary',\n    }[titleTH];\n\n    if (sortBy) {\n      const order = sortOrder[sortBy] === 'asc' ? 1 : -1;\n\n      workers.sort((a, b) => {\n        if (a[sortBy] < b[sortBy]) {\n          return -1 * order;\n        }\n\n        if (a[sortBy] > b[sortBy]) {\n          return 1 * order;\n        }\n\n        return 0;\n      });\n      sortOrder[sortBy] = sortOrder[sortBy] === 'asc' ? 'desc' : 'asc';\n      updateTable(workers);\n    }\n  }\n\n  function updateTable(finalArr) {\n    tbody.innerHTML = '';\n\n    for (const worker of finalArr) {\n      const row = document.createElement('tr');\n\n      row.innerHTML = `\n        <td>${worker.name}</td>\n        <td>${worker.position}</td>\n        <td>${worker.office}</td>\n        <td>${worker.age}</td>\n        <td>$${worker.salary.toLocaleString('en-US')}</td>\n      `;\n      tbody.appendChild(row);\n    }\n  }\n}\n\nfunction addEmployee(e) {\n  e.preventDefault();\n\n  const nameWorker = form.querySelector('input[name=\"name\"]').value.trim();\n  const position = form.querySelector('input[name=\"position\"]').value.trim();\n  const office = form.querySelector('select[name=\"office\"]').value.trim();\n  const age = parseInt(\n    form.querySelector('input[name=\"age\"]').value.trim(),\n    10,\n  );\n  const salary = parseFloat(\n    form.querySelector('input[name=\"salary\"]').value.trim(),\n  );\n\n  if (!nameWorker || !position || !office || isNaN(age) || isNaN(salary)) {\n    showNotification(\n      'error',\n      'Validation Error',\n      'All fields are required and must be valid.',\n    );\n\n    return;\n  }\n\n  if (nameWorker.length < 4) {\n    showNotification(\n      'error',\n      'Validation Error',\n      'Name must be at least 4 letters long.',\n    );\n\n    return;\n  }\n\n  if (position.length < 4) {\n    showNotification('error', 'Validation Error', 'Position must be valid.');\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    showNotification(\n      'error',\n      'Validation Error',\n      'Age must be between 18 and 90.',\n    );\n\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${nameWorker}</td>\n    <td>${position}</td>\n    <td>${office}</td>\n    <td>${age}</td>\n    <td>$${salary.toLocaleString('en-US', { minimumFractionDigits: 0 })}</td>\n  `;\n  tbody.appendChild(newRow);\n\n  form.reset();\n  showNotification('success', 'Success', 'Employee added to the table.');\n}\n\nfunction showNotification(type, title, description) {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${type}`;\n  notification.setAttribute('data-qa', 'notification');\n\n  notification.innerHTML = `\n    <strong>${title}</strong>\n    <p>${description}</p>\n  `;\n\n  notifications.appendChild(notification);\n\n  setTimeout(() => {\n    notifications.removeChild(notification);\n  }, 3000);\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}